{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\Desktop\\\\Proyecto1\\\\frontend\\\\src\\\\routes\\\\Registro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Container, Row, Col, Form, InputGroup, Dropdown, DropdownButton } from 'react-bootstrap';\nimport axios from \"axios\";\nimport AuthInput from '../components/rutCheck';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst instance = axios.create({\n  baseURL: 'http://localhost:3000/'\n});\n\nfunction Registro() {\n  _s();\n\n  const [rut, setRut] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [resultados, setResultados] = useState([]);\n  const [selected, setSelected] = useState('Usuario');\n\n  const handleSelect = e => {\n    setSelected(e);\n  };\n\n  const handleRut = e => {\n    setRut(e.target.value);\n  };\n\n  const handlePass = e => {\n    setPass(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    switch (selected) {\n      case \"Estudiante\":\n        try {\n          const respuesta = await instance.post(\"auth/registro/check/estudiante\", {\n            rut: rut\n          });\n          setResultados(respuesta.data);\n\n          if (resultados.registrado === false) {\n            try {\n              await instance.post(\"auth/registro/estudiante\", {\n                rut: rut,\n                password: pass\n              });\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        break;\n\n      case \"Apoderado\":\n        try {\n          const respuesta = await instance.post(\"auth/registro/check/apoderado\", {\n            rut: rut\n          });\n          setResultados(respuesta.data);\n\n          if (resultados.registrado === false) {\n            try {\n              await instance.post(\"auth/registro/apoderado\", {\n                rut: rut,\n                password: pass\n              });\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        break;\n\n      case \"Profesor\":\n        try {\n          const respuesta = await instance.post(\"auth/registro/check/profesor\", {\n            rut: rut\n          });\n          setResultados(respuesta.data);\n\n          if (resultados.registrado === false) {\n            try {\n              await instance.post(\"auth/registro/profesor\", {\n                rut: rut,\n                password: pass\n              });\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formBasicPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Rut\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                  onChange: handleRut\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n                  as: InputGroup.Append,\n                  variant: \"outline-secondary\",\n                  title: selected,\n                  id: \"input-group-dropdown-1\",\n                  onSelect: handleSelect,\n                  children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    eventKey: \"Estudiante\",\n                    children: \"Estudiante\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    eventKey: \"Profesor\",\n                    children: \"Profesor\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                    eventKey: \"Apoderado\",\n                    children: \"Apoderado\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 124,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n              registrado: resultados.registrado,\n              change: handlePass\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSubmit,\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/login\",\n              children: \"Ya esta registrado?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Registro, \"lbWYi7GiemgSX0zSMmQ8C2wTxYs=\");\n\n_c = Registro;\nexport default Registro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registro\");","map":{"version":3,"sources":["C:/Users/nicol/Desktop/Proyecto1/frontend/src/routes/Registro.js"],"names":["React","useState","Button","Container","Row","Col","Form","InputGroup","Dropdown","DropdownButton","axios","AuthInput","Link","instance","create","baseURL","Registro","rut","setRut","pass","setPass","resultados","setResultados","selected","setSelected","handleSelect","e","handleRut","target","value","handlePass","handleSubmit","preventDefault","respuesta","post","data","registrado","password","error","console","log","Append"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\r\nimport {Button, Container,Row,Col,Form,InputGroup,Dropdown,DropdownButton} from 'react-bootstrap'\r\nimport axios from \"axios\";\r\nimport AuthInput from '../components/rutCheck';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:3000/'\r\n  });\r\n\r\nfunction Registro(){\r\n    const [rut,setRut]=useState(\"\");\r\n    const [pass,setPass]=useState(\"\");\r\n    const [resultados,setResultados] = useState([])\r\n    const [selected,setSelected]=useState('Usuario')\r\n    \r\n    const handleSelect = (e) =>{\r\n        setSelected(e)\r\n    }\r\n    \r\n    const handleRut = (e) => {\r\n        setRut(e.target.value)\r\n    }\r\n    const handlePass = (e) => {\r\n        setPass(e.target.value)\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        switch(selected){\r\n            case \"Estudiante\":\r\n                try {\r\n                    const respuesta=await instance.post(\"auth/registro/check/estudiante\",{\r\n                        rut:rut,\r\n                    });\r\n                    setResultados(respuesta.data)\r\n                    if(resultados.registrado===false){\r\n                        try {\r\n                            await instance.post(\"auth/registro/estudiante\",{\r\n                                rut:rut,\r\n                                password:pass\r\n                            })\r\n                        } catch (error) {\r\n                            console.log(error)\r\n                            \r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                break\r\n            case \"Apoderado\":\r\n                try {\r\n                    const respuesta=await instance.post(\"auth/registro/check/apoderado\",{\r\n                        rut:rut,\r\n                    });\r\n                    setResultados(respuesta.data)\r\n                    if(resultados.registrado===false){\r\n                        try {\r\n                            await instance.post(\"auth/registro/apoderado\",{\r\n                                rut:rut,\r\n                                password:pass\r\n                            })\r\n                        } catch (error) {\r\n                            console.log(error)\r\n                            \r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                break\r\n            case \"Profesor\":\r\n                \r\n                try {\r\n                    const respuesta=await instance.post(\"auth/registro/check/profesor\",{\r\n                        rut:rut,\r\n                    });\r\n                    setResultados(respuesta.data)\r\n                    if(resultados.registrado===false){\r\n                        try {\r\n                            await instance.post(\"auth/registro/profesor\",{\r\n                                rut:rut,\r\n                                password:pass\r\n                            })\r\n                        } catch (error) {\r\n                            console.log(error)\r\n                            \r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                break\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Container>\r\n                <Row>\r\n                   \r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n    \r\n                <Form>\r\n                    \r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Rut</Form.Label>\r\n                        <InputGroup className=\"mb-3\">\r\n                            <Form.Control onChange={handleRut} />\r\n                            <DropdownButton\r\n                            as={InputGroup.Append}\r\n                            variant=\"outline-secondary\"\r\n                            title={selected}\r\n                            id=\"input-group-dropdown-1\"\r\n                            onSelect={handleSelect}\r\n                            >\r\n                            <Dropdown.Item eventKey=\"Estudiante\">Estudiante</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Profesor\">Profesor</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Apoderado\">Apoderado</Dropdown.Item>\r\n                            </DropdownButton>\r\n                            \r\n                        </InputGroup>\r\n                        \r\n                    </Form.Group>\r\n                    <AuthInput registrado={resultados.registrado} change={handlePass}/>\r\n                    \r\n                    <Button onClick={handleSubmit} variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                    <Link to=\"/login\">Ya esta registrado?</Link>\r\n                    \r\n                </Form>\r\n                </Col>\r\n                </Row>\r\n        </Container>\r\n\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Registro\r\n"]},"metadata":{},"sourceType":"module"}