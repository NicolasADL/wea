{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\Desktop\\\\Proyecto\\\\frontend\\\\src\\\\routes\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Container } from 'react-bootstrap';\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { logout } from '../redux/actions/authActions';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const isLogged = useSelector(store => store.authReducer.isLogged);\n  const id = useSelector(store => store.authReducer.ID);\n  const name = useSelector(store => store.authReducer.Name);\n  const tipo = useSelector(store);\n  const dispatch = useDispatch();\n\n  const handleLogout = e => {\n    dispatch(logout());\n  };\n\n  console.log(isLogged);\n  console.log(id);\n  console.log(name);\n  console.log(tipo);\n  return isLogged ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [\"hola \", name, /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          type: \"button\",\n          onClick: handleLogout,\n          children: \" LOG OUT \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"no logueado\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"fad0S4xtLovXRpFXJYuRwMJU59k=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/nicol/Desktop/Proyecto/frontend/src/routes/Home.js"],"names":["Button","Container","React","useSelector","useDispatch","logout","Link","Home","isLogged","store","authReducer","id","ID","name","Name","tipo","dispatch","handleLogout","e","console","log"],"mappings":";;;AAAA,SAASA,MAAT,EAAgBC,SAAhB,QAAiC,iBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAqBC,WAArB,QAAwC,aAAxC;AACA,SAASC,MAAT,QAAuB,8BAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAKA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,QAA9B,CAA5B;AACA,QAAMG,EAAE,GAAGR,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBE,EAA9B,CAAtB;AACA,QAAMC,IAAI,GAAGV,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBI,IAA9B,CAAxB;AACA,QAAMC,IAAI,GAAEZ,WAAW,CAAEM,KAAF,CAAvB;AACA,QAAMO,QAAQ,GAAGZ,WAAW,EAA5B;;AACA,QAAMa,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,QAAQ,CAACX,MAAM,EAAP,CAAR;AACH,GAFD;;AAGAc,EAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAYT,EAAZ;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEA,SAAOP,QAAQ,gBACX;AAAA,2BACA,QAAC,SAAD;AAAA,0BAAiBK,IAAjB,eAEA,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,QAAT;AAAA,+BACA,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,QAAhB;AAAyB,UAAA,IAAI,EAAC,QAA9B;AAAuC,UAAA,OAAO,EAAEI,YAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADW,gBAUX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAVJ;AAYH;;GA1BQV,I;UACYJ,W,EACNA,W,EACEA,W,EACDA,W,EACKC,W;;;KALZG,I;AA4BT,eAAeA,IAAf","sourcesContent":["import { Button,Container } from 'react-bootstrap';\r\nimport React from 'react'\r\nimport { useSelector,useDispatch } from 'react-redux';\r\nimport { logout } from '../redux/actions/authActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\n\r\nfunction Home() {\r\n    const isLogged = useSelector((store) => store.authReducer.isLogged);\r\n    const id = useSelector((store) => store.authReducer.ID);\r\n    const name = useSelector((store) => store.authReducer.Name);\r\n    const tipo= useSelector((store));\r\n    const dispatch = useDispatch()\r\n    const handleLogout = (e) => {\r\n        dispatch(logout());\r\n    }\r\n    console.log(isLogged)\r\n    console.log(id)\r\n    console.log(name)\r\n    console.log(tipo)\r\n    \r\n    return isLogged ?(\r\n        <div>\r\n        <Container>hola {name}\r\n        \r\n        <Link to=\"/login\">\r\n        <Button variant=\"danger\" type=\"button\" onClick={handleLogout}> LOG OUT </Button>\r\n        </Link>\r\n        </Container>\r\n        </div>\r\n    ): (\r\n        <div>no logueado</div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n"]},"metadata":{},"sourceType":"module"}