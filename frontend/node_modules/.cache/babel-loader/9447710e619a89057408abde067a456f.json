{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\Desktop\\\\Proyecto\\\\frontend\\\\src\\\\routes\\\\Registro.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Container, Row, Col, Form, InputGroup, Dropdown, DropdownButton } from 'react-bootstrap';\nimport axios from \"axios\";\nimport AuthInput from '../components/rutCheck';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport '../assets/css/styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst dotenv = require(\"dotenv\");\n\ndotenv.config();\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nfunction Registro() {\n  _s();\n\n  const [rut, setRut] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [resultados, setResultados] = useState([]);\n  const [selected, setSelected] = useState('Usuario');\n  const isLogged = useSelector(store => store.authReducer.isLogged);\n\n  const handleSelect = e => {\n    setSelected(e);\n  };\n\n  const handleRut = e => {\n    setRut(e.target.value);\n  };\n\n  const handlePass = e => {\n    setPass(e.target.value);\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    switch (selected) {\n      case \"Estudiante\":\n        try {\n          const respuesta = await instance.post(\"auth/registro/check/estudiante\", {\n            rut: rut\n          });\n          setResultados(respuesta.data);\n\n          if (resultados.registrado === false) {\n            try {\n              await instance.post(\"auth/registro/estudiante\", {\n                rut: rut,\n                password: pass\n              });\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        break;\n\n      case \"Apoderado\":\n        try {\n          const respuesta = await instance.post(\"auth/registro/check/apoderado\", {\n            rut: rut\n          });\n          setResultados(respuesta.data);\n\n          if (resultados.registrado === false) {\n            try {\n              await instance.post(\"auth/registro/apoderado\", {\n                rut: rut,\n                password: pass\n              });\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        break;\n\n      case \"Profesor\":\n        try {\n          const respuesta = await instance.post(\"auth/registro/check/profesor\", {\n            rut: rut\n          });\n          setResultados(respuesta.data);\n\n          if (resultados.registrado === false) {\n            try {\n              await instance.post(\"auth/registro/profesor\", {\n                rut: rut,\n                password: pass\n              });\n            } catch (error) {\n              console.log(error);\n            }\n          }\n        } catch (error) {\n          console.log(error);\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return !isLogged ? /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      className: \"forma\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"forma-control\",\n        controlId: \"formBasicPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"forma-label\",\n          children: \"Rut\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"rut\",\n            placeholder: \"Ingrese su Rut\",\n            className: \"forma-input\",\n            onChange: handleRut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(DropdownButton, {\n            className: \"forma-input\",\n            as: InputGroup.Append,\n            variant: \"outline-secondary\",\n            title: selected,\n            id: \"input-group-dropdown-1\",\n            onSelect: handleSelect,\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"Estudiante\",\n              children: \"Estudiante\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"Profesor\",\n              children: \"Profesor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              eventKey: \"Apoderado\",\n              children: \"Apoderado\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(AuthInput, {\n        registrado: resultados.registrado,\n        change: handlePass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"btn-submit\",\n        onClick: handleSubmit,\n        variant: \"primary\",\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          marginLeft: \"260px\"\n        },\n        to: \"/login\",\n        children: \"Ya esta registrado?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Registro, \"VKBUI8RlvuGBoNLFiHPtWghGHGQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = Registro;\nexport default Registro;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registro\");","map":{"version":3,"sources":["C:/Users/nicol/Desktop/Proyecto/frontend/src/routes/Registro.js"],"names":["React","useState","Button","Container","Row","Col","Form","InputGroup","Dropdown","DropdownButton","axios","AuthInput","Link","Redirect","useSelector","dotenv","require","config","instance","create","baseURL","process","env","REACT_APP_BACKEND_URL","Registro","rut","setRut","pass","setPass","resultados","setResultados","selected","setSelected","isLogged","store","authReducer","handleSelect","e","handleRut","target","value","handlePass","handleSubmit","preventDefault","respuesta","post","data","registrado","password","error","console","log","Append","marginLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA0BC,GAA1B,EAA8BC,GAA9B,EAAkCC,IAAlC,EAAuCC,UAAvC,EAAkDC,QAAlD,EAA2DC,cAA3D,QAAgF,iBAAhF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,0BAAP;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACAD,MAAM,CAACE,MAAP;AACA,MAAMC,QAAQ,GAAGR,KAAK,CAACS,MAAN,CAAa;AAC1BC,EAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADK,CAAb,CAAjB;;AAIA,SAASC,QAAT,GAAmB;AAAA;;AACf,QAAM,CAACC,GAAD,EAAKC,MAAL,IAAazB,QAAQ,CAAC,EAAD,CAA3B;AACA,QAAM,CAAC0B,IAAD,EAAMC,OAAN,IAAe3B,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAAC4B,UAAD,EAAYC,aAAZ,IAA6B7B,QAAQ,CAAC,EAAD,CAA3C;AACA,QAAM,CAAC8B,QAAD,EAAUC,WAAV,IAAuB/B,QAAQ,CAAC,SAAD,CAArC;AACA,QAAMgC,QAAQ,GAAGnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,WAAN,CAAkBF,QAA9B,CAA5B;;AAEA,QAAMG,YAAY,GAAIC,CAAD,IAAM;AACvBL,IAAAA,WAAW,CAACK,CAAD,CAAX;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAID,CAAD,IAAO;AACrBX,IAAAA,MAAM,CAACW,CAAC,CAACE,MAAF,CAASC,KAAV,CAAN;AACH,GAFD;;AAGA,QAAMC,UAAU,GAAIJ,CAAD,IAAO;AACtBT,IAAAA,OAAO,CAACS,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAGA,QAAME,YAAY,GAAG,MAAOL,CAAP,IAAa;AAC9BA,IAAAA,CAAC,CAACM,cAAF;;AACA,YAAOZ,QAAP;AACI,WAAK,YAAL;AACI,YAAI;AACA,gBAAMa,SAAS,GAAC,MAAM1B,QAAQ,CAAC2B,IAAT,CAAc,gCAAd,EAA+C;AACjEpB,YAAAA,GAAG,EAACA;AAD6D,WAA/C,CAAtB;AAGAK,UAAAA,aAAa,CAACc,SAAS,CAACE,IAAX,CAAb;;AACA,cAAGjB,UAAU,CAACkB,UAAX,KAAwB,KAA3B,EAAiC;AAC7B,gBAAI;AACA,oBAAM7B,QAAQ,CAAC2B,IAAT,CAAc,0BAAd,EAAyC;AAC3CpB,gBAAAA,GAAG,EAACA,GADuC;AAE3CuB,gBAAAA,QAAQ,EAACrB;AAFkC,eAAzC,CAAN;AAIH,aALD,CAKE,OAAOsB,KAAP,EAAc;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEH;AACJ;AACJ,SAhBD,CAgBE,OAAOA,KAAP,EAAc;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACD;;AACJ,WAAK,WAAL;AACI,YAAI;AACA,gBAAML,SAAS,GAAC,MAAM1B,QAAQ,CAAC2B,IAAT,CAAc,+BAAd,EAA8C;AAChEpB,YAAAA,GAAG,EAACA;AAD4D,WAA9C,CAAtB;AAGAK,UAAAA,aAAa,CAACc,SAAS,CAACE,IAAX,CAAb;;AACA,cAAGjB,UAAU,CAACkB,UAAX,KAAwB,KAA3B,EAAiC;AAC7B,gBAAI;AACA,oBAAM7B,QAAQ,CAAC2B,IAAT,CAAc,yBAAd,EAAwC;AAC1CpB,gBAAAA,GAAG,EAACA,GADsC;AAE1CuB,gBAAAA,QAAQ,EAACrB;AAFiC,eAAxC,CAAN;AAIH,aALD,CAKE,OAAOsB,KAAP,EAAc;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEH;AACJ;AACJ,SAhBD,CAgBE,OAAOA,KAAP,EAAc;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACD;;AACJ,WAAK,UAAL;AAEI,YAAI;AACA,gBAAML,SAAS,GAAC,MAAM1B,QAAQ,CAAC2B,IAAT,CAAc,8BAAd,EAA6C;AAC/DpB,YAAAA,GAAG,EAACA;AAD2D,WAA7C,CAAtB;AAGAK,UAAAA,aAAa,CAACc,SAAS,CAACE,IAAX,CAAb;;AACA,cAAGjB,UAAU,CAACkB,UAAX,KAAwB,KAA3B,EAAiC;AAC7B,gBAAI;AACA,oBAAM7B,QAAQ,CAAC2B,IAAT,CAAc,wBAAd,EAAuC;AACzCpB,gBAAAA,GAAG,EAACA,GADqC;AAEzCuB,gBAAAA,QAAQ,EAACrB;AAFgC,eAAvC,CAAN;AAIH,aALD,CAKE,OAAOsB,KAAP,EAAc;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEH;AACJ;AACJ,SAhBD,CAgBE,OAAOA,KAAP,EAAc;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;;AACD;;AACJ;AACI;AAlER;AAoEH,GAtED;;AAwEA,SAAO,CAAChB,QAAD,gBAGC,QAAC,SAAD;AAAA,2BAII,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,OAAhB;AAAA,8BAGI,QAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,eAAtB;AAAsC,QAAA,SAAS,EAAC,mBAAhD;AAAA,gCACI,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AAAA,kCACI,QAAC,IAAD,CAAM,OAAN;AAAc,YAAA,IAAI,EAAC,KAAnB;AAAyB,YAAA,WAAW,EAAC,gBAArC;AAAsD,YAAA,SAAS,EAAC,aAAhE;AAA8E,YAAA,QAAQ,EAAEK;AAAxF;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,cAAD;AACA,YAAA,SAAS,EAAC,aADV;AAEA,YAAA,EAAE,EAAE/B,UAAU,CAAC6C,MAFf;AAGA,YAAA,OAAO,EAAC,mBAHR;AAIA,YAAA,KAAK,EAAErB,QAJP;AAKA,YAAA,EAAE,EAAC,wBALH;AAMA,YAAA,QAAQ,EAAEK,YANV;AAAA,oCAQA,QAAC,QAAD,CAAU,IAAV;AAAe,cAAA,QAAQ,EAAC,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARA,eASA,QAAC,QAAD,CAAU,IAAV;AAAe,cAAA,QAAQ,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBATA,eAUA,QAAC,QAAD,CAAU,IAAV;AAAe,cAAA,QAAQ,EAAC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAuBI,QAAC,SAAD;AAAW,QAAA,UAAU,EAAEP,UAAU,CAACkB,UAAlC;AAA8C,QAAA,MAAM,EAAEN;AAAtD;AAAA;AAAA;AAAA;AAAA,cAvBJ,eAyBI,QAAC,MAAD;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAA+B,QAAA,OAAO,EAAEC,YAAxC;AAAsD,QAAA,OAAO,EAAC,SAA9D;AAAwE,QAAA,IAAI,EAAC,QAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBJ,eA4BI,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACW,UAAAA,UAAU,EAAC;AAAZ,SAAb;AAAkC,QAAA,EAAE,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UAHD,gBAyCJ,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UAzCH;AA0CH;;GAnIQ7B,Q;UAKYV,W;;;KALZU,Q;AAqIT,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport {Button, Container,Row,Col,Form,InputGroup,Dropdown,DropdownButton} from 'react-bootstrap'\r\nimport axios from \"axios\";\r\nimport AuthInput from '../components/rutCheck';\r\nimport {Link, Redirect} from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport '../assets/css/styles.css'\r\nconst dotenv = require(\"dotenv\");\r\ndotenv.config();\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_URL\r\n  });\r\n\r\nfunction Registro(){\r\n    const [rut,setRut]=useState(\"\");\r\n    const [pass,setPass]=useState(\"\");\r\n    const [resultados,setResultados] = useState([])\r\n    const [selected,setSelected]=useState('Usuario')\r\n    const isLogged = useSelector((store) => store.authReducer.isLogged);\r\n    \r\n    const handleSelect = (e) =>{\r\n        setSelected(e)\r\n    }\r\n    \r\n    const handleRut = (e) => {\r\n        setRut(e.target.value)\r\n    }\r\n    const handlePass = (e) => {\r\n        setPass(e.target.value)\r\n    }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n        switch(selected){\r\n            case \"Estudiante\":\r\n                try {\r\n                    const respuesta=await instance.post(\"auth/registro/check/estudiante\",{\r\n                        rut:rut,\r\n                    });\r\n                    setResultados(respuesta.data)\r\n                    if(resultados.registrado===false){\r\n                        try {\r\n                            await instance.post(\"auth/registro/estudiante\",{\r\n                                rut:rut,\r\n                                password:pass\r\n                            })\r\n                        } catch (error) {\r\n                            console.log(error)\r\n                            \r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                break\r\n            case \"Apoderado\":\r\n                try {\r\n                    const respuesta=await instance.post(\"auth/registro/check/apoderado\",{\r\n                        rut:rut,\r\n                    });\r\n                    setResultados(respuesta.data)\r\n                    if(resultados.registrado===false){\r\n                        try {\r\n                            await instance.post(\"auth/registro/apoderado\",{\r\n                                rut:rut,\r\n                                password:pass\r\n                            })\r\n                        } catch (error) {\r\n                            console.log(error)\r\n                            \r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                break\r\n            case \"Profesor\":\r\n                \r\n                try {\r\n                    const respuesta=await instance.post(\"auth/registro/check/profesor\",{\r\n                        rut:rut,\r\n                    });\r\n                    setResultados(respuesta.data)\r\n                    if(resultados.registrado===false){\r\n                        try {\r\n                            await instance.post(\"auth/registro/profesor\",{\r\n                                rut:rut,\r\n                                password:pass\r\n                            })\r\n                        } catch (error) {\r\n                            console.log(error)\r\n                            \r\n                        }\r\n                    }\r\n                } catch (error) {\r\n                    console.log(error)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    return !isLogged?(\r\n            \r\n\r\n            <Container >\r\n                \r\n                \r\n    \r\n                <Form className=\"forma\">\r\n                    \r\n\r\n                    <Form.Group className=\"forma-control\" controlId=\"formBasicPassword\">\r\n                        <Form.Label className=\"forma-label\">Rut</Form.Label>\r\n                        <InputGroup >\r\n                            <Form.Control type=\"rut\" placeholder=\"Ingrese su Rut\" className=\"forma-input\" onChange={handleRut} />\r\n                            <DropdownButton\r\n                            className=\"forma-input\"\r\n                            as={InputGroup.Append}\r\n                            variant=\"outline-secondary\"\r\n                            title={selected}\r\n                            id=\"input-group-dropdown-1\"\r\n                            onSelect={handleSelect}\r\n                            >\r\n                            <Dropdown.Item eventKey=\"Estudiante\">Estudiante</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Profesor\">Profesor</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"Apoderado\">Apoderado</Dropdown.Item>\r\n                            </DropdownButton>\r\n                            \r\n                        </InputGroup>\r\n                        \r\n                    </Form.Group>\r\n                    <AuthInput registrado={resultados.registrado} change={handlePass}/>\r\n                    \r\n                    <Button className=\"btn-submit\" onClick={handleSubmit} variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                    <Link style={{marginLeft:\"260px\"}}to=\"/login\">Ya esta registrado?</Link>\r\n                    \r\n                </Form>\r\n                \r\n        </Container>\r\n\r\n    ):(<Redirect to=\"/home\"/>)\r\n}\r\n\r\nexport default Registro\r\n"]},"metadata":{},"sourceType":"module"}