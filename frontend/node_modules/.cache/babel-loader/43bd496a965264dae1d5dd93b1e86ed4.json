{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicol\\\\Desktop\\\\Proyecto\\\\frontend\\\\src\\\\components\\\\rutCheck.js\";\nimport React from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthInput = props => {\n  let {\n    registrado\n  } = props;\n  let {\n    change\n  } = props;\n\n  if (registrado === false) {\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        onChange: change\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  } else {\n    return null;\n  }\n};\n\n_c = AuthInput;\nexport default AuthInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthInput\");","map":{"version":3,"sources":["C:/Users/nicol/Desktop/Proyecto/frontend/src/components/rutCheck.js"],"names":["React","Form","AuthInput","props","registrado","change"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,iBAArB;;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAC3B,MAAI;AAAEC,IAAAA;AAAF,MAAiBD,KAArB;AACA,MAAI;AAACE,IAAAA;AAAD,MAAWF,KAAf;;AAEA,MAAIC,UAAU,KAAG,KAAjB,EAAwB;AACtB,wBAAQ,QAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,mBAAtB;AAAA,8BACA,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,eAEA,QAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,UAAnB;AAA8B,QAAA,QAAQ,EAAEC;AAAxC;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AAID,GALD,MAMK;AACD,WAAO,IAAP;AACH;AACF,CAbD;;KAAMH,S;AAeN,eAAeA,SAAf","sourcesContent":["import React from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nconst AuthInput = (props) => {\n  let { registrado } = props;\n  let {change} = props;\n\n  if (registrado===false) {\n    return (<Form.Group controlId=\"formBasicPassword\">\n            <Form.Label>Contrase√±a</Form.Label>\n            <Form.Control type=\"password\" onChange={change}/>\n        </Form.Group>);\n  }\n  else {\n      return null\n  } \n};\n\nexport default AuthInput;"]},"metadata":{},"sourceType":"module"}